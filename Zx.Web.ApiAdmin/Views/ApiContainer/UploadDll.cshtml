@model List<Tuple<int, string, string, string>>
@{
    ViewBag.Title = "ApiContainer-UploadDll";
    Layout = "~/Views/Shared/_LayoutMenu.cshtml";
    ViewBag.CurrController = "ApiContainer";
    ViewBag.CurrView = "UploadDll";
    var siteId = (int) ViewBag.SiteId;
}
<div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">
    <h2 class="sub-header">@ViewBag.Title</h2>    
    <div id="siteBusinessContainer"></div>    
    <div id="entryDllContainer"></div>
    <div id="showCls"></div>
    <div id="mappingList"></div>
</div>
<input id="hidQueryStrSiteId" type="hidden" value="@siteId"/>
<script id="siteBusinessTemplate1" type="text/x-jquery-tmpl">
    <div class="form-inline">
        <div class="form-group">
            <label>Site:</label>
            <select id="sltSiteId" class="form-control">                
            @foreach (var item in Model)
            {
                var selected = "";
                if (item.Item1 == siteId)
                {
                    selected = "selected=selected";
                }
                <option value="@item.Item1" sitedesc="@item.Item4" sitedllpath="@item.Item3" @selected>@item.Item2</option>
            }                
            </select>            
        </div>
        <button id="btnSiteBusinessConfirm" type="button" class="btn btn-primary">确定</button>
    </div>    
</script>
<script id="siteBusinessTemplate2" type="text/x-jquery-tmpl">
    <div class="form-inline">
        <div class="form-group">           
            <label>Site:</label><label>${site}</label><br>
            <label>Path:</label><label>${path}</label><br>
            <label>Desc:</label><label>${desc}</label>
        </div>
    </div>    
</script>

<script id="entryDllTemplate1" type="text/x-jquery-tmpl">
    <h2 class="sub-header"></h2>
    <div class="form-inline">
        <!--upload-->
        <div id="testId"><button id="btnReturnSb" type="button" class="btn btn-default">返回</button></div>
        <div id="tb">
            <table id="tbl">
                <tbody>
                    <tr style="font-weight:bold">
                        <td colspan='2'>文件名</td>
                        <td>操作</td>
                        <td>选则EntryDll</td>
                    </tr>
                </tbody>
            </table>           
        </div>
        <!--upload-->
        <div style="position:absolute">
            <button id="btnShowCls" type="button" class="btn btn-primary">确定</button>
        </div>              
    </div>
</script>
<script id="dllFileListTemplate" type="text/x-jquery-tmpl">
    <tr>
        <td colspan='2'><span class='imgName'>${fileName}</span></td>
        <td><a class='delImg' href='javascript:void(0)'>删除</a></td>
        <td><input name='ckbEntryDll' value="${fileName}" type='radio'/> </td>
    </tr>
</script>

<script id="showClassTemplate" type="text/x-jquery-tmpl">
    <h2 class="sub-header"></h2>
    {{each Res}}
    <h3 style="font-size:12px">${$value.Name}&nbsp;&nbsp;&nbsp;&nbsp;<a style="font-size:12px" serviceName="${$value.Name}">展开</a></h3>    
    <div></div>  
    {{/each}}
    <button id="btnSetMethod" type="button" class="btn btn-primary">选择</button>
    <button id="btnReturnDll" type="button" class="btn btn-primary">返回</button>
</script>
<script id="showMethodTemplate" type="text/x-jquery-tmpl">
    <div class="table-responsive">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>ReturnTypeName</th>
                    <th>ParmType</th>
                    <th>IsStatic</th>
                    <th>选择</th>
                </tr>
            </thead>
            <tbody>
                {{each Res}}
                <tr class="{{if $value.IsAppeared}}appeared{{/if}}">
                    <td>${$value.Name}</td>
                    <td>${$value.ReturnTypeName}</td>
                    <td>${$value.ParmType}</td>
                    <td>${$value.IsStatic}</td>
                    <td>
                        {{if $value.IsAppeared}}
                        <input name="ckbMethod" cls="${$value.Class}" method="${$value.Name}" type="checkbox" checked="checked"/>
                        {{else}}
                        <input name="ckbMethod" cls="${$value.Class}" method="${$value.Name}" type="checkbox"/>
                        {{/if}}
                    </td>                    
                </tr>
                {{/each}}
            </tbody>
        </table>
    </div>
</script>
<script id="mappingTemplate" type="text/x-jquery-tmpl">
    <h2 class="sub-header"></h2>
    <div class="table-responsive">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Verb</th>
                    <th>Path</th>
                    <th>ServiceAssembly</th>
                    <th>ServiceName</th>
                    <th>MethodName</th>
                    <th>IsAsync</th>
                </tr>
            </thead>
            <tbody>
                {{each Res}}
                <tr class="${$value.State}">
                    <td>
                        {{if $value.State=='delete'}}
                        <span>${$value.Verb}</span>
                        {{else}}
                        <select>
                            <option value="GET">GET</option>
                            {{if $value.Verb=='POST'}}
                            <option selected="selected" value="POST">POST</option>
                            {{else}}
                            <option value="POST">POST</option>
                            {{/if}}
                        </select>
                        {{/if}}
                    </td>
                    <td>
                        {{if $value.State=='delete'}}
                        <span>${$value.Path}</span>
                        {{else}}
                        <input type="text" value="${$value.Path}"/>
                        {{/if}}
                    </td>
                    <td>${$value.ServiceAssembly}</td>
                    <td>${$value.ServiceName}</td>
                    <td>${$value.MethodName}</td>
                    <td>
                        {{if $value.State=='delete'}}
                        <span>${$value.IsAsync}</span>
                        {{else}}
                        {{if $value.IsAsync==false}}
                        <input type="checkbox"/>
                        {{else}}
                        <input checked="checked" type="checkbox"/>
                        {{/if}}
                        {{/if}}
                    </td>                   
                </tr>
                {{/each}}
            </tbody>
        </table>
    </div>
    <span style="font-weight:700">注释：</span>
    <input id="txtRemark" type="text" value="" style="width:500px">
    <button class="btn btn-primary" type="button" id="btnSubmitMapping">提交</button>         
    <button class="btn btn-default" type="button" id="btnReturnCheckMethod">重新选择</button>
</script>
@section styles{
    @Styles.Render("/Content/JSAjaxFileUploader/JQuery.JSAjaxFileUploader.css")
    <style type="text/css">
        #tb table {
            border-collapse: collapse;
            width: 600px;
        }
        #tb td {
            /*text-align: center;*/
            padding-top: 5px;
            width: 25%;
        }
        /*#tb tr {
            background-color: #E3E3E3;
            line-height: 35px;
        }
        .showImg {
            width: 50px;
            height: 50px;
        }*/
    </style>
}
@section scripts{
    @Scripts.Render("/Scripts/jquery-1.10.2.js")
    @Scripts.Render("/Scripts/jquery.tmpl.min.js")
    @Scripts.Render("/Scripts/JSAjaxFileUploader/JQuery.JSAjaxFileUploaderMultiple.js")
    <script>
        $(function() {
            var pageData = new UploadData();
            new SiteBusiness(pageData).Init();
        });

        //站点和业务-----------------------------------------------------------------------------------

        function SiteBusiness(pageData) {
            this._pageData = pageData;
        }

        SiteBusiness.prototype = {
            Init: function() {
                //设置输入tmpl
                this._containerSb = $("#siteBusinessContainer");
                this._containerSb.html($("#siteBusinessTemplate1").tmpl());
                //设置事件
                this._sltSite = $("#sltSiteId");
                this._btnSiteBusinessConfirm = $("#btnSiteBusinessConfirm");
                this.SetBtnSiteBusinessConfirmClickEvt();
                //如果querystring中传入了siteid则自动触发点击事件
                var queryStrSiteId = $("#hidQueryStrSiteId").val();
                if (queryStrSiteId > 0) {
                    this._btnSiteBusinessConfirm.click();
                }
            },
            SetBtnSiteBusinessConfirmClickEvt: function() {
                var pData = this._pageData;
                var thisObj = this;
                this._btnSiteBusinessConfirm.click(function() {
                    var selected = thisObj._sltSite.find("option:selected");
                    pData.SetCurrSite({
                        "id": thisObj._sltSite.val(),
                        "name": selected.text(),
                        "libpath": selected.attr('sitedllpath'),
                        "sitedesc": selected.attr('sitedesc')
                    });

                    thisObj.ShowSiteBusinessDetail();
                    //进入dll选则步骤
                    new DllInfo(pData).Init();
                });
            },
            ShowSiteBusinessDetail: function() {
                var data = {
                    "site": this._pageData.GetCurrSname(),
                    "path": this._pageData.GetCurrSlibpath(),
                    "desc": this._pageData.GetCurrSdesc()
                };
                this._containerSb.html($("#siteBusinessTemplate2").tmpl(data));
            }
        };

        //选定Dll-----------------------------------------------------------------------------------

        function DllInfo(pageData) {
            this._pageData = pageData;
        }

        DllInfo.prototype = {
            Init: function() {
                //选则dll
                this._containerEd = $("#entryDllContainer");
                this._containerEd.html($("#entryDllTemplate1").tmpl());
                //返回btn
                this.SetBtnReturnSbClickEvt();
                //show
                this.SetBtnShowClsClickEvt();

                //upload
                this._upload = $("#testId");
                this._fileList = $('#tbl');
                this._fileListContainer = $('#tb');
                this._tmplFileList = $("#dllFileListTemplate");
                //setupload
                this.InitUpload();
            },
            SetBtnReturnSbClickEvt: function() {
                var thisObj = this;
                $("#btnReturnSb").click(function() {
                    thisObj._containerEd.empty();
                    new SiteBusiness(new UploadData()).Init();
                });
            },
            SetBtnShowClsClickEvt: function() {
                var thisObj = this;
                $("#btnShowCls").click(function() {
                    var entryDllName = $("input[name='ckbEntryDll']:checked").val();
                    thisObj._pageData.SetCurrEntryDll(entryDllName);
                    thisObj._containerEd.empty();
                    new ClassMethod(thisObj._pageData).Show();
                });
            },
            InitUpload: function() {
                this._fileList.hide();
                if (!this.CleanDirectory()) return;
                var that = this;
                this._upload.JSAjaxFileUploader({
                    uploadUrl: '/ApiContainer/upload',
                    inputText: '选择多个文件',
                    fileName: 'photo',
                    maxFileSize: 10485760,//Max 10MB file 1kb=1024字节
                    allowExt: 'dll',
                    zoomPreview: false,
                    zoomWidth: 360,
                    zoomHeight: 360,
                    success: function(data) {
                        that._fileList.show();
                        that.CreateFileList(data.path, data.name, that);
                    },
                    error: function(data) {
                        alert("出错了~~");
                    }
                });
                that.SetDeleteFile();
            },
            CreateFileList: function(path, fileName, that) {
                var data = { 'fileName': fileName };
                that._fileList.append(that._tmplFileList.tmpl(data));
            },
            SetDeleteFile: function() {
                this._fileListContainer.on("click", ".delImg", function() {
                    var $link = $(this);
                    $.ajax({
                        cache: false,
                        url: '/ApiContainer/deletefile',
                        type: "POST",
                        data: { name: $link.parent().prev().find('.imgName').text() },
                        success: function(data) {
                            if (data.msg) {
                                //alert("图片删除成功");
                                $link.parent().parent().remove();
                            }
                        },
                        error: function(jqXhr, textStatus, errorThrown) {
                            alert("出错了 '" + jqXhr.status + "' (状态: '" + textStatus + "', 错误为: '" + errorThrown + "')");
                        }
                    });
                });
            },
            CleanDirectory: function() {
                var res = false;
                $.ajax({
                    url: '/ApiContainer/CleanTmpLib',
                    type: "POST",
                    async: false,
                    dataType: "json",
                    success: function(data) {
                        res = data.msg;
                    }
                });
                return res;
            }
        };

        //显示Class与Method---------------------------------------------------------------------------------

        function ClassMethod(pageData) {
            this._pageData = pageData;
            this._container = $("#showCls");
        }

        ClassMethod.prototype = {
            Show: function() {
                this.GetDllClass(this.SetClassContainer);
            },
            GetDllClass: function(callback) {
                var thisObj = this;
                var parms = { "name": this._pageData.GetCurrEntryDll() };
                $.ajax({
                    url: "/ApiContainer/DllClass",
                    type: "GET",
                    data: parms,
                    async: true,
                    dataType: "json",
                    success: function(data) {
                        if (callback) {
                            callback(thisObj, data);
                        }
                    }
                });
            },
            SetClassContainer: function(thisObj, data) {
                thisObj._container.html($("#showClassTemplate").tmpl(data));
                //绑定展开方法
                var links = thisObj._container.find("a");
                links.bind("click", function() {
                    var mContainer = $(this).parent().next("div").first();
                    var text = $(this).text();
                    if (text == "展开") {
                        thisObj.ShowMethod($(this).attr("serviceName"), mContainer);
                        $(this).text("收起");
                    } else {
                        mContainer.html('');
                        $(this).text("展开");
                    }
                });
                thisObj.SetBtnSetMethodEvt();
                thisObj.SetBtnReturnEvt();
                //加载默认项
                thisObj.LoadAppearedServiceMethod();
            },
            ShowMethod: function(className, mContainer) {
                //int siteId, int businessId
                var parms = { "siteId": this._pageData.GetCurrSid(), "dname": this._pageData.GetCurrEntryDll(), "cname": className };
                $.ajax({
                    url: "/ApiContainer/ClassMethod",
                    type: "GET",
                    data: parms,
                    async: true,
                    dataType: "json",
                    success: function(data) {
                        mContainer.html($("#showMethodTemplate").tmpl(data));
                        //设置方法选择checkbox点击事件
                        mContainer.find("input:checkbox").each(function() {
                            $(this).bind('change', function() {
                                var tr = $(this).parent().parent();
                                var trClass = tr.attr('class');
                                if (trClass == 'appeared' && !$(this).is(":checked")) {
                                    tr.attr('class', 'delete');
                                }
                                if (trClass == 'delete' && $(this).is(":checked")) {
                                    tr.attr('class', 'appeared');
                                }
                                if (trClass == 'add' && !$(this).is(":checked")) {
                                    tr.removeClass();
                                }
                                if (trClass == '' && $(this).is(":checked")) {
                                    tr.addClass('add');
                                }
                            });
                        });
                    }
                });
            },
            SetBtnSetMethodEvt: function() {
                var thisObj = this;
                $("#btnSetMethod").click(function() {
                    thisObj._pageData.ClearCheckedMethod();
                    var methods = $('input:checkbox[name=ckbMethod]:checked');
                    $.each(methods, function(i, ckb) {
                        var mInfo = { 'cls': $(ckb).attr("cls"), 'method': $(ckb).attr("method") };
                        thisObj._pageData.PushCheckedMethod(mInfo);
                    });
                    //showlist
                    new SetMapping(thisObj._container, thisObj._pageData).Show();
                });
            },
            SetBtnReturnEvt: function() {
                var thisObj = this;
                $("#btnReturnDll").click(function() {
                    thisObj._container.empty();
                    new DllInfo(thisObj._pageData).Init();
                });
            },
            LoadAppearedServiceMethod: function() {
                var parms = { "siteId": this._pageData.GetCurrSid() };
                $.ajax({
                    url: "/ApiContainer/GetAppeardClass",
                    type: "GET",
                    data: parms,
                    async: true,
                    dataType: "json",
                    success: function(data) {
                        $.each(data.Res, function(i, o) {
                            $("a[servicename='" + o + "']").click();
                        });
                    }
                });
            }
        };

        //配置mapping---------------------------------------------------------------------------------

        function SetMapping(clsDiv, pageData) {
            this._pageData = pageData;
            this._clsDiv = clsDiv;
            this._mappingContainer = $("#mappingList");
        }

        SetMapping.prototype = {
            Show: function() {
                this._clsDiv.hide();
                var data = this._pageData.GetCheckedMethod();
                var that = this;
                this.BuildMappingDataWithDefaultSetting(data,
                    function(res) {
                        that._mappingContainer.html($("#mappingTemplate").tmpl({ 'Res': res.Res }));
                        that.SetContainer();
                    });
            },
            SetContainer: function() {
                var that = this;
                $("#btnReturnCheckMethod").click(function() {
                    that.CancelEvt();
                });
                $("#btnSubmitMapping").click(function() {
                    that.SubmitEvt();
                });
            },
            SubmitEvt: function() {
                var remark = $("#txtRemark").val();
                var mappings = [];
                $("#mappingList tbody tr").each(function() {
                    var tr = $(this);
                    var trCls = $(this).attr('class');
                    if (trCls == 'add' || trCls == 'nochange') {
                        var tds = tr.find('td');
                        var mapping = {
                            Verb: tr.find('option:selected').val(),
                            Path: tr.find('input:text').val(),
                            ServiceAssembly: $(tds[2]).text(),
                            ServiceName: $(tds[3]).text(),
                            MethodName: $(tds[4]).text(),
                            IsAsync: tr.find('input:checkbox').is(':checked')
                        };
                        mappings.push(mapping);
                    }
                });
                var parm = { siteId: this._pageData.GetCurrSid(), remark: remark, mappings: mappings };
                $.ajax({
                    url: "/ApiContainer/Sync",
                    type: "POST",
                    data: JSON.stringify(parm),
                    async: true,
                    dataType: "json",
                    contentType: 'application/json',
                    success: function(data) {
                        if (data.res == 0) {
                            alert("success");
                        } else {
                            alert("fail");
                        }
                    }
                });
            },
            CancelEvt: function() {
                this._mappingContainer.empty();
                this._clsDiv.show();
            },
            BuildMappingDataWithDefaultSetting: function(sourceData, callback) {
                var parms = {
                    SiteId: this._pageData._currSite.id,
                    Mappings: sourceData
                };
                $.ajax({
                    url: "/ApiContainer/BuildMappingDataWithDefaultSetting",
                    type: "POST",
                    data: JSON.stringify(parms),
                    async: true,
                    dataType: "json",
                    contentType: 'application/json',
                    success: function(data) {
                        if (callback) {
                            callback(data);
                        }
                    }
                });
                return sourceData;
            }
        };

/////////////////////////////////////////////////////////////
        //页面数据对象

        function UploadData() {
            this._currSite = null;
            this._currDll = "";
            this._checkedMethod = new Array();
        }

        UploadData.prototype = {
            SetCurrSite: function(site) {
                this._currSite = site;
            },
            SetCurrEntryDll: function(dllName) {
                this._currDll = dllName;
            },
            ClearCheckedMethod: function() {
                this._checkedMethod = [];
            },
            PushCheckedMethod: function(mInfo) {
                var item = {
                    ServiceAssembly: this._currDll,
                    ServiceName: mInfo.cls,
                    MethodName: mInfo.method,
                    SiteId: this._currSite.id
                };
                this._checkedMethod.push(item);
            },
            GetCheckedMethod: function() {
                return this._checkedMethod;
            },
            GetCurrSid: function() {
                return this._currSite.id;
            },
            GetCurrSname: function() {
                return this._currSite.name;
            },
            GetCurrSlibpath: function() {
                return this._currSite.libpath;
            },
            GetCurrSdesc: function() {
                return this._currSite.sitedesc;
            },
            GetCurrEntryDll: function() {
                return this._currDll;
            }
        };
    </script>
}
